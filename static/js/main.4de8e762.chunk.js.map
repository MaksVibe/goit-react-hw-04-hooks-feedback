{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","onLeaveFeedback","onClick","type","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Math","round","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","textContent","toLowerCase","percents","isNaN","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNASeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCcQC,EAhBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,eAAC,EAAD,CAASH,MAAM,wBAAf,UACE,wBAAQI,QAASD,EAAiBE,KAAK,SAAvC,kBAGA,wBAAQD,QAASD,EAAiBE,KAAK,SAAvC,qBAGA,wBAAQD,QAASD,EAAiBE,KAAK,SAAvC,qBCPSC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCmBEC,EAjBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACa,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,yBACrCK,EAAQ,GACP,eAAC,EAAD,CAASZ,MAAM,aAAf,UACE,uCAAUS,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBE,KAAKC,MAAMF,GAAlC,cCTK,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAEMC,EAAqB,kBAAMZ,EAAOC,EAAUC,GAmClD,OACE,oCACE,cAAC,EAAD,CAAiBR,gBArBG,SAAAmB,GAGtB,OAFcA,EAAEC,OAAOC,YAAYC,eAGjC,IAAK,OACHP,EAAQT,EAAO,GACf,MACF,IAAK,UACHU,EAAWT,EAAU,GACrB,MACF,IAAK,MACHU,EAAOT,EAAM,OAYf,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBA1CkC,WACtC,IAAIa,EAAY,IAAMjB,EAAQY,IAE9B,OAAIM,MAAMD,GACW,EAGjBA,GAAY,IACK,IAGdA,EA+BiBE,QChD5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,U","file":"static/js/main.4de8e762.chunk.js","sourcesContent":["const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import Section from \"../Section/Section\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <Section title=\"Please leave feedback\">\n      <button onClick={onLeaveFeedback} type=\"button\">\n        Good\n      </button>\n      <button onClick={onLeaveFeedback} type=\"button\">\n        Neutral\n      </button>\n      <button onClick={onLeaveFeedback} type=\"button\">\n        Bad\n      </button>\n    </Section>\n  );\n};\n\nexport default FeedbackOptions;\n","const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import Section from \"../Section/Section\";\nimport Notification from \"../Notification/Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total === 0 && <Notification message=\"There is no feedback\" />}\n      {total > 0 && (\n        <Section title=\"Statistics\">\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total: {total}</p>\n          <p>Positive feedback: {Math.round(positivePercentage)}%</p>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Statistics;\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions.jsx\";\nimport Statictics from \"./components/Statistics/Statistics.jsx\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    let percents = (100 * good) / countTotalFeedback();\n\n    if (isNaN(percents)) {\n      return (percents = 0);\n    }\n\n    if (percents >= 100) {\n      return (percents = 100);\n    }\n\n    return percents;\n  };\n\n  const onLeaveFeedback = e => {\n    const value = e.target.textContent.toLowerCase();\n\n    switch (value) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <section>\n      <FeedbackOptions onLeaveFeedback={onLeaveFeedback} />\n\n      <Statictics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      />\n    </section>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}